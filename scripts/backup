#!/usr/bin/env bash

# Used before setting up a fresh install of macOS
# Accumulates all machine specific files that are not under VCS into a single directory

set -e

p_header()  { printf "\\n\\033[1;97m%s\\033[0m\\n" "$@"; }
p_success() { printf "\\033[1;32m❯\\033[0m %s\\n" "$@"; }
p_error()   { printf "\\033[1;31m❯\\033[0m %s\\n" "$@"; }
p_warn()   { printf "\\033[1;33m❯\\033[0m %s\\n" "$@"; }

# Create the backup dir
BACKUP_DIR="$HOME/backup-$(date +%Y-%m-%d)"
mkdir -p "$BACKUP_DIR"

# Backup crontab
p_header 'crontab'
if crontab -l > "$BACKUP_DIR/crontab"; then
  p_success 'Backed up crontab'
else
  p_error 'Error backing up!'
fi

# Backup Applications directory list
p_header '/Applications'
if ls /Applications > "$BACKUP_DIR/applications.txt"; then
  p_success 'Backed up Applications directory list'
else
  p_error 'Error backing up!'
fi

# Backup /etc/hosts file
p_header '/etc/hosts'
if cp /etc/hosts "$BACKUP_DIR/hosts"; then
  p_success 'Backed up /etc/hosts'
else
  p_error 'Error backing up!'
fi

# Backup vim spellfile
p_header 'vim spellfile'
if cp "$HOME/.vim/spell/en.utf-8.add" "$BACKUP_DIR/en.utf-8.add"; then
  p_success 'Backed up vim spellfile'
else
  p_error 'Error backing up!'
fi

# Backup ~/.ssh
p_header "$HOME/.ssh"
if cp -R "$HOME/.ssh/" "$BACKUP_DIR/dot-ssh"; then
  p_success 'Backed up ~/.ssh'
else
  p_error 'Error backing up!'
fi

# Backup ~/.aws
p_header "$XDG_CONFIG_HOME/aws"
if cp -R "$XDG_CONFIG_HOME/aws/" "$BACKUP_DIR/dot-aws"; then
  p_success "Backed up $XDG_CONFIG_HOME/aws"
else
  p_error 'Error backing up!'
fi

# Backup ~/.getmail
p_header "$HOME/.getmail"
if cp -R "$HOME/.getmail/" "$BACKUP_DIR/dot-getmail"; then
  p_success 'Backed up ~/.getmail'
else
  p_error 'Error backing up!'
fi

# Backup ~/.gmail
p_header "$HOME/.gmail"
if cp -R "$HOME/.gmail/" "$BACKUP_DIR/dot-gmail"; then
  p_success 'Backed up ~/.gmail'
else
  p_error 'Error backing up!'
fi

# Backup ~/.local/bin
p_header "$HOME/.local/bin"
if cp -R "$HOME/.local/bin/" "$BACKUP_DIR/dot-local-bin"; then
  p_success 'Backed up ~/.local/bin'
else
  p_error 'Error backing up!'
fi

# Backup zsh_history
p_header "$XDG_DATA_HOME/zsh/history"
if cp "$XDG_DATA_HOME/zsh/history" "$BACKUP_DIR/dot-zsh_history"; then
  p_success 'Backed up zsh_history'
else
  p_error 'Error backing up!'
fi

# Backup zshrc.local
p_header "$HOME/.zshrc.local"
if cp "$HOME/.zshrc.local" "$BACKUP_DIR/dot-zshrc.local"; then
  p_success 'Backed up zshrc.local'
else
  p_error 'Error backing up!'
fi

# Backup fonts
p_header "$HOME/Library/Fonts"
if cp -R "$HOME/Library/Fonts/" "$BACKUP_DIR/Fonts"; then
  p_success 'Backed up ~/Library/Fonts'
else
  p_error 'Error backing up!'
fi

# Backup Firefox profile
ff_profile=$(find ~/Library/Application\ Support/Firefox/Profiles -type d -depth 1 -iname '*dev-*')
if [ -d "$ff_profile" ]; then
  p_header "$ff_profile"
  if cp -R "$ff_profile" "$BACKUP_DIR/firefox"; then
    p_success "Backed up $ff_profile"
  else
    p_error 'Error backing up!'
  fi
else
  p_error "Could not find Firefox profile"
fi

# Backup Visual Studio Code settings
p_header "Visual Studio Code settings"
if cp -R "$HOME/Library/Application Support/Code/User" "$BACKUP_DIR/visual-studio-code"; then
  p_success 'Backed up Visual Studio Code settings'
else
  p_error 'Error backing up!'
fi
