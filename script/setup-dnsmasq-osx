#!/bin/bash
#
# Usage: setup-dnsmasq-osx TLD IPADDRESS

set -e

e_message()  { printf "\033[1;36m$@\033[0m\n"; }
e_error()   { printf "\033[0;31m$@\033[0m\n"; }

if [[ $# -eq 0 ]]; then
  echo "Usage: `basename $0` TLD IPADDRESS"
  exit 0
fi

TLD=$1
IPADDRESS=$2
CONF=/usr/local/etc/dnsmasq.conf

if [ -f "/etc/resolver/$TLD" ]; then
  e_error "dnsmasq is already setup for .$TLD"
else
  sudo -v

  # Install dnsmasq
  if test ! $(which dnsmasq); then
    brew install dnsmasq
  fi

  # Copy the default configuration file
  if [ ! -f /usr/local/etc/dnsmasq.conf ]; then
    cp $(brew list dnsmasq | grep /dnsmasq.conf.example$) $CONF
  fi

  # Copy the daemon configuration file into place
  if [ ! -f /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist ]; then
    sudo cp $(brew list dnsmasq | grep /homebrew.mxcl.dnsmasq.plist$) /Library/LaunchDaemons/
  fi

  # Start Dnsmasq automatically
  if ! sudo launchctl list | grep -q homebrew.mxcl.dnsmasq; then
    sudo launchctl load /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
  fi

  # Add dev rule to dnsmasq conf
  if ! grep -Fxq "address=/$TLD/$IPADDRESS" $CONF; then
    echo "address=/$TLD/$IPADDRESS" >> $CONF
  fi

  # Restart dnsmasq
  sudo launchctl stop homebrew.mxcl.dnsmasq
  sudo launchctl start homebrew.mxcl.dnsmasq

  # Create resolver dir
  sudo mkdir -p /etc/resolver

  # Setup dev resolver
  echo "nameserver 127.0.0.1" | sudo tee "/etc/resolver/$TLD" > /dev/null

  e_message 'dnsmasq setup complete'
fi
