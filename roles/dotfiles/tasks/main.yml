---
- name: Create ~/.config directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - ~/.config
    - ~/.config/karabiner
    - ~/.config/git
    - ~/.config/aws
    - ~/.config/ripgrep
    - ~/.config/dircolors
    - ~/.cache
    - ~/.local
    - ~/.local/share
    - ~/.local/share/tig
    - ~/.local/share/node
    - ~/.local/share/zsh

- name: Create backup directory
  file:
    path: ~/.local/backups
    state: directory

- name: Check for non-symlink originals
  stat:
    path: ~/{{ item }}
  register: original_check
  loop: "{{ dotfile_files }}"
  changed_when: original_check.stat.exists and not original_check.stat.islnk

- name: Backup originals
  command: mv ~/{{ item.0 }} ~/.local/backups/
  args:
    creates: ~/.local/backups/{{ item.0 }}
    removes: ~/{{ item.0 }}
  loop:
    "{{ dotfile_files | zip(original_check.results) | list }}"
  when: item.1.stat.exists and not item.1.stat.islnk
  loop_control:
    label: "{{ item.0 }}"

- name: Create symlinks
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}"
    path: ~/{{ item }}
    state: link
  loop: "{{ dotfile_files }}"

- name: Symlink nvim to vim
  file:
    path: ~/.config/nvim
    src: ~/.vim
    state: link

- name: Prepare Karabiner config
  command: "{{ ansible_env.PWD }}/roles/dotfiles/support/karabiner.js"
  register: karabiner_config
  check_mode: false

- name: Create templates
  template:
    dest: "{{ ansible_env.HOME }}/{{ item }}"
    src: "{{ item }}"
  loop: "{{dotfile_templates}}"
