"-------------------------------------------------------------------------------
" vimrc
"-------------------------------------------------------------------------------

" Set correct paths for python3
if filereadable($HOME . '/.pyenv/versions/py3nvim/bin/python')
  let g:python3_host_prog = $HOME . '/.pyenv/versions/py3nvim/bin/python'
endif

" Bootstrap vim-plug on a fresh install - require a manual PlugInstall
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

call plug#begin()
Plug 'arcticicestudio/nord-vim', { 'branch': 'develop' }
Plug 'christoomey/vim-tmux-navigator'
Plug 'dense-analysis/ale'
Plug 'janko-m/vim-test', { 'on': ['TestFile', 'TestNearest'] }
Plug 'justinmk/vim-sneak', { 'on': ['<Plug>Sneak_s', '<Plug>Sneak_S'] }
Plug 'machakann/vim-sandwich'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTree' }
Plug 'sheerun/vim-polyglot'
Plug 'simnalamburt/vim-mundo', { 'on': 'MundoShow' }
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'unblevable/quick-scope'
Plug 'wincent/loupe'
Plug 'wincent/terminus'

if executable('fzf')
  Plug '/usr/local/opt/fzf'
  Plug 'junegunn/fzf.vim'
endif

if executable('composer')
  Plug 'phpactor/phpactor', { 'for': 'php', 'do': 'composer install' }
endif

if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
endif

" Leave this so PlugClean doesn't remove it, but also doesn't load it
Plug 'lifepillar/vim-colortemplate', { 'on': [] }

" Uncomment to work with vim-colortemplate
Plug 'lifepillar/vim-colortemplate'
call plug#end()
